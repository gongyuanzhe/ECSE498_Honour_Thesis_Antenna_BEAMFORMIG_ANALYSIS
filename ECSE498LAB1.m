%MATLAB Code from Sensor Array Analyzer App

%Generated by MATLAB 9.5 and Phased Array System Toolbox 4.0

%Generated on 01-Feb-2019 15:09:28

%method of the vector phase functions 
%https://www.mathworks.com/help/phased/ref/phased.replicatedsubarray-system-object.html

% Create a uniform rectangular array
h = phased.URA;
h.Size = [8 2];
h.ElementSpacing = [0.0428571428571429 0.0428571428571429];
h.Lattice = 'Rectangular';
h.ArrayNormal = 'z';
%Calculate Row Taper
rwind = ones(1,2);
rwind = repmat(rwind,8,1);
%Calculate Column Taper
cwind = ones(1,8);
cwind = repmat(cwind.',1,2);
%Calculate taper
wind = rwind.*cwind;
h.Taper = wind;
%Create Isotropic Antenna Element
el = phased.IsotropicAntennaElement;
h.Element = el;
%Assign steering angles, frequencies and propagation speed
SA = [50;0];
%Assign number of phase shift quantization bits
PSB = 0;
F = 3500000000;
PS = 300000000;
%Create figure, panel, and axes
fig = figure;
panel = uipanel('Parent',fig);
hAxes = axes('Parent',panel,'Color','none');
NumCurves = length(F);
%Calculate Steering Weights
w = zeros(getDOF(h), NumCurves);

%important matlab functions for array attenna pattern analysis
%https://www.mathworks.com/help/phased/ref/phased.ula-system-object.html

%define the arbitrary arrary matrix
%array in the 
%ANG=[50.0,17.0,-24.5;0.4,4.0,23.9;50.0,17.0,-24.5;0.4,4.0,23.9;50.0,17.0,-24.5;0.4,4.0,23.9;50.0,17.0,-24.5;0.4,4.0,23.9;50.0,17.0,-24.5;0.4,4.0,23.9;50.0,17.0,-24.5;0.4,4.0,23.9;50.0,17.0,-24.5;0.4,4.0,23.9;50.0,17.0,-24.5;0.4,4.0,23.9]
%ANG=[50.0,17.0,-24.5;0.4,4.0,23.9]  [azimuth;elevation]
array = phased.ULA('NumElements',16);
%get the directivity of the beamforming:
d = directivity(array,F,SA,'PropagationSpeed',PS)

%steervec = phased.SteeringVector('SensorArray',array);
steervec =phased.SteeringVector('SensorArray',h, 'PropagationSpeed', PS, ...
    'NumPhaseShifterBits', PSB(idx));
Amatrix = steervec(F,SA)



%a = uint8([0.7850;0.4567;-0.9609;-0.0866;0.9943;-0.2964;-0.8801;0.6354;0.6354;-0.8801;-0.2964;0.9943;1;1;1;1]);
%b = uint8([2;2;7;7;1;1;1;1;1;1;1;1;1;1;1;1]);

for idx = 1:length(F)
    SV =phased.SteeringVector('SensorArray',h, 'PropagationSpeed', PS, ...
    'NumPhaseShifterBits', PSB(idx));
    w(:, idx) = step(SV, F(idx), SA(:, idx))
end


%Plot 2d graph
fmt = 'rectangular';
cutAngle = 0;
pattern(h, F, -180:180, cutAngle, 'PropagationSpeed', PS, 'Type', ...
    'directivity', 'CoordinateSystem', fmt ,'weights', w); 
%change the array w, with some arbitrary defined array to get the target
%beamforming;

axis(hAxes,'square')
%Create legend
legend_string = cell(1,NumCurves);
lines = findobj(gca,'Type','line');
for idx = 1:NumCurves
    [Fval, ~, Fletter] = engunits(F(idx));
    if size(SA, 2) == 1
        az_str = num2str(SA(1,1));
        elev_str = num2str(SA(2,1));
    else
        az_str = num2str(SA(1, idx));
        elev_str = num2str(SA(2, idx));
    end
    if PSB(idx)>0
        legend_string{idx} = [num2str(Fval) Fletter 'Hz;' num2str(SA(1, ...
            idx)) 'Az' ' ' elev_str 'El' ';' ...
            num2str(PSB(idx)) '-bit Quantized'];
    else
        legend_string{idx} = [num2str(Fval) Fletter 'Hz;' num2str(SA(1, ...
            idx)) 'Az' ' ' elev_str 'El'];
    end
end
legend(legend_string, 'Location', 'southeast');

%SV = steervec(FREQ,ANG,STEERANG,WS) [azimuth;elevation]
%also specifies WS as weights applied 
%to each element within each subarray.To use this syntax, 
%set the SensorArray property to an array that supports subarrays and 
%set the SubarraySteering property of the array to 'Custom'



